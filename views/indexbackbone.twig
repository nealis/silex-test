<html>
    <head>
        <title>Prova Silex-Backbone 2019</title>
        <script src="./js/underscore.js"></script>
        <script src="./js/jquery.min.js"></script>
        <script src="./js/backbone.js"></script>
        <script src="./js/marionette/json2.js"></script>
        <script src="./js/marionette/backbone.radio.js"></script>
        <script src="./js/marionette/backbone.marionette.js"></script>
    </head>
    <body>
        <h1>Libri</h1>

        <div id="filterForm"></div>

        <hr>
        <div id="listaLibri"></div>
    </body>
    <script>

        Backbone.emulateJSON = true;

        LibroModel = Backbone.Model.extend({
          initialize: function() {
            console.log('Nuovo libro creato');
          },
          url: '/save',
          defaults: {
            title: 'NO TITLE',
            author: 'Nealis',
            price: '0'
          },
          qualeAutore: function() {
            alert(this.get('author'));
            return true;
          },
          delete: function() {
              this.url = '/delete';
              this.save();
              this.url = '/save';
          },
          update: function() {
              this.set('titolo', this.get('title'));
              this.set('autore', this.get('author'));
              this.set('prezzo', this.get('price'));
              this.sync('create', this);
        },
        });

        LibroFormModel = Backbone.Model.extend({
            defaults: {
                title: '',
                author: '',
                price: ''
            }
        });

        LibroFormView = Backbone.View.extend({
            initialize: function() {
                this.listenTo(this.model, "change", this.render);
            },
            template: _.template('<form id="filterForm">\n' +
                '            Titolo <input type="text" class="title" value=<%= title%> >\n' +
                '            Autore <input type="text" class="author" value=<%= author%> >\n' +
                '            Prezzo <input type="text" class="price" value=<%= price%> >\n' +
                '            <button type="button" class="filtra">Filtra!</button>\n' +
                '            <button type="button" class="clear">Clear</button>\n' +
                '        </form>'),
            events: {
                'click .filtra': 'filtra',
                'change': function(event) {
                    this.model.set(event.target.className, event.target.value)
                },
                'click .clear': 'clear',
            },
            filtra: function(event) {
                collection.reload({filters: {titolo: this.model.get('title'), autore: this.model.get('author')}, page: 1, column: 'title', order: 'ASC'});
            },
            clear: function (event) {
                this.model.set('title','');
                this.model.set('author','');
                this.model.set('price','');
                collection.fetch();
            },
            render: function() {
                this.$el.html(this.template(this.model.attributes));
                return this;
            }
        });

        var filterModel = new LibroFormModel();
        var filterView = new LibroFormView({ model: filterModel });

        var LibroView = Marionette.View.extend({
          template: '',
          viewTemplate: '<div class="libro"><button class="modifica">Modifica</button><%= title %>: <%= author %> - <%= price %> â‚¬</div>',
          editTemplate: '<div><button class="save">Salva</button><input type="text" class="title" value="<%= title %>"/><input type="text"class="author" value="<%= author %>"/><input type="text"class="price" value="<%= price %>"/></div>',
          initialize: function() {
            this.listenTo(this.model, "change", this.render);
            this.template = _.template(this.viewTemplate)
          },
          render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
          },
          events: {
            'click .modifica': 'modifica',
            'click .save': 'save',
            'change': function(event) {
              this.model.set(event.target.className, event.target.value)
            }
          },
          modifica: function() {
            this.template = _.template(this.editTemplate);
            this.render();
          },
          save: function() {
            // integrazione col backend non ancora funzionante
            this.template = _.template(this.viewTemplate);
            this.model.update();
            this.render();
          }
        });

        var LibroCollection = Backbone.Collection.extend({
          model: LibroModel,
          url: '/read2',
          parse: function(response) {
            if (response.success) {
              return response.data;
            } else {
              return [];
            }
          },
          reload: function(state) {
              this.fetch({
                  type: 'POST',
                  url: '/read',
                  reset: true,
                  data: state
              })
          }
        });

        var LibriListView = Marionette.CollectionView.extend({
            childView: LibroView,
            el: '#listaLibri'
        });

        var istanzaDelLibro = new LibroModel({title: 'HP', author: 'JKR', price: 19.99});
        var collection = new LibroCollection();
        collection.fetch();
        var libriListView = new LibriListView({collection: collection});

        $('#listaLibri').html(libriListView.render());

        // ESEMPIO FORM (binding fra input e model)
        var TitoloLibroFormView = Backbone.View.extend({
          el: '#titoloLibro',
          events: {
            input: function(event) {
              this.model.set('title', event.target.value)
            }
          }
        });
        new TitoloLibroFormView({ model: istanzaDelLibro })

        $(document).ready(function() {
            var view = filterView.render();
            $('#filterForm').html(view.el);
        })

    </script>
</html>
